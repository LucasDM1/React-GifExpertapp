{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","catg","type","value","onChange","target","handleInputChange","protoTypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4NAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAOlB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAACP,IArBM,SAACA,GAEtBF,EAAcE,EAAEQ,OAAOF,OAmBHG,CAAkBT,SAO7CN,EAAYgB,WAAa,CAClBf,cAAegB,IAAUC,KAAKC,Y,mCCpCzBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAGFC,EAAOD,EAAKE,KACd,SAAAC,GAAQ,IAAD,EACH,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAI9Ca,QAAQC,IAAIR,GAfO,kBAiBZA,GAjBY,4CAAH,sDCEPS,EAAc,SAAC,GAAqB,EAApBN,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OACI,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,6BAAKA,QCJJS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAQtB,ECVwB,SAACA,GAEzB,MAA0BnB,mBAAS,CAC/B0B,KAAK,GACLe,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAU,WAEN1B,EAAQC,GACH0B,MAAK,SAAAC,GACFH,EAAS,CAELjB,KAAKoB,EACLL,SAAQ,SAIrB,CAACtB,IAGGuB,EDXiBK,CAAa5B,GAA9BsB,EAAP,EAAOA,QAASf,EAAhB,EAAgBA,KAGhB,OACI,qCACA,oBAAIW,UAAU,oCAAd,SAAmDlB,IAClDsB,GAAW,4CAEZ,qBAAKJ,UAAU,YAAf,SAGKX,EAAKE,KAAK,SAAAC,GAAG,OACV,cAAC,EAAD,eAEKA,GADAA,EAAIC,aEtBZkB,EAAe,WAExB,MAAoChD,mBAAS,CAAC,YAA9C,mBAAOiD,EAAP,KAAmBlD,EAAnB,KAMA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEKkD,EAAWrB,KAAI,SAACT,GACb,OACI,cAAC,EAAD,CAECA,SAAUA,GADNA,UChB7B+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d697ab8b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState(\"\");\r\n\r\n    const handleInputChange= (e) =>{\r\n\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        //console.log(\"submiteado\")\r\n        if (inputValue.trim().length>2) {\r\n            setCategories(catg => [ inputValue, ...catg])\r\n            setinputValue('')\r\n        }\r\n\r\n       \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={(e)=>{handleInputChange(e)}}\r\n            />\r\n        </form>\r\n    )\r\n\r\n   \r\n}\r\n AddCategory.protoTypes = {\r\n        setCategories: PropTypes.func.isRequired\r\n    };","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=nR6LV7480NGhfPIg2AZ8WW9W8FhYUIbZ`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    //console.log(data)\r\n    const gifs = data.map(\r\n        img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        }\r\n    )\r\n    console.log(gifs)\r\n   \r\n    return gifs;\r\n}\r\n//getGifs();","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n   // console.log(id, title, url);\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <h3>{title}</h3>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     getGifs(category)\r\n    //         .then(setImages)\r\n    // }, [category])\r\n    const {loading, data} = useFetchGifs(category);\r\n    \r\n\r\n    return (\r\n        <>\r\n        <h2 className=\"animate__animated animate__fadeIn\">{category}</h2>\r\n        {loading && <p>Loading... </p>}\r\n       \r\n        <div className=\"card-grid\">\r\n            \r\n\r\n            {data.map( img => (\r\n                <GifGridItem \r\n                key={img.id}\r\n                { ...img } \r\n                //img={img}\r\n                />\r\n            ))}\r\n           \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport{ getGifs }from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    \r\n                    data:imgs,\r\n                    loading:false\r\n\r\n                })\r\n            })\r\n    }, [category])\r\n\r\n    \r\n    return state\r\n\r\n}","import React, { useState }from 'react';\r\n//import PropTypes from 'prop-types'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Berserk']);\r\n    //GifExpertApp\r\n\r\n    // const handleAdd = () =>{\r\n    //    setCategories([...categories, \"HunterxHunter\"]); \r\n    // }\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            \r\n                {categories.map((category)=>{\r\n                    return(\r\n                        <GifGrid\r\n                        key={category}\r\n                         category={category} />\r\n                    );\r\n                })}\r\n                {/* <button onClick={()=>{handleAdd()}}>Agregar </button> */}\r\n            \r\n\r\n        </div>\r\n    );\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp'\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}